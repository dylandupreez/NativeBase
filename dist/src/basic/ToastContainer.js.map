{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["ToastContainer","props","state","modalVisible","fadeAnim","Value","position","opacity","width","elevation","paddingHorizontal","OS","top","getTop","undefined","bottom","buttonText","trim","length","config","setState","text","getButtonText","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","onClose","duration","setTimeout","timing","toValue","start","getToastStyle","closeToast","toastInstance","_root","showToast","propTypes","oneOfType","object","number","array","StyledToastContainer"],"mappings":"y2BAAA,4B;AACA,qC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mE;;AAEMA,c;AACJ,wBAAYC,KAAZ,CAAmB;AACXA,KADW;AAEjB,MAAKC,KAAL,CAAa;AACXC,aAAc,KADH;AAEXC,SAAU,GAAI,uBAASC,KAAb,CAAmB,CAAnB,CAFC,CAAb,CAFiB;;AAMlB,C;;;;;AAKe;AACd,MAAO;AACLC,SAAU,UADL;AAELC,QAAS,KAAKL,KAAL,CAAWE,QAFf;AAGLI,MAAO,MAHF;AAILC,UAAW,CAJN;AAKLC,kBAAmB,sBAASC,EAAT,GAAgB,KAAhB,CAAwB,EAAxB,CAA6B,CAL3C;AAMLC,IAAK,KAAKV,KAAL,CAAWI,QAAX,GAAwB,KAAxB,CAAgC,KAAKO,MAAL,EAAhC,CAAgDC,SANhD;AAOLC,OAAQ,KAAKb,KAAL,CAAWI,QAAX,GAAwB,QAAxB,CAAmC,KAAKO,MAAL,EAAnC,CAAmDC,SAPtD,CAAP;;AASD,C;AACQ;AACP,GAAI,sBAASH,EAAT,GAAgB,KAApB,CAA2B;AACzB,MAAO,GAAP;AACD,CAFD,IAEO;AACL,MAAO,EAAP;AACD;AACF,C;AACaK,U,CAAY;AACxB,GAAIA,UAAJ,CAAgB;AACd,GAAIA,WAAWC,IAAX,GAAkBC,MAAlB,GAA6B,CAAjC,CAAoC;AAClC,MAAOJ,UAAP;AACD,CAFD,IAEO,OAAOE,WAAP;AACR;AACD,MAAOF,UAAP;AACD,C;AACqB,oBAAVK,OAAU,MAAVA,MAAU;AACpB,KAAKC,QAAL,CAAc;AACZjB,aAAc,IADF;AAEZkB,KAAMF,OAAOE,IAFD;AAGZL,WAAY,KAAKM,aAAL,CAAmBH,OAAOH,UAA1B,CAHA;AAIZO,KAAMJ,OAAOI,IAJD;AAKZjB,SAAUa,OAAOb,QAAP,CAAkBa,OAAOb,QAAzB,CAAoC,QALlC;AAMZkB,sBAAuBL,OAAOK,qBANlB;AAOZC,MAAON,OAAOM,KAPF;AAQZC,gBAAiBP,OAAOO,eARZ;AASZC,YAAaR,OAAOQ,WATR;AAUZC,UAAWT,OAAOS,SAVN;AAWZC,QAASV,OAAOU,OAXJ,CAAd;;AAaA,GAAIV,OAAOW,QAAP,CAAkB,CAAtB,CAAyB;AACvBC,WAAW,UAAM;AACf,sBAASC,MAAT,CAAgB,OAAK9B,KAAL,CAAWE,QAA3B,CAAqC;AACnC6B,QAAS,CAD0B;AAEnCH,SAAU,GAFyB,CAArC;AAGGI,KAHH;AAIAH,WAAW,UAAM;AACf,OAAKX,QAAL,CAAc;AACZjB,aAAc,KADF,CAAd;;AAGD,CAJD,CAIG,GAJH;AAKD,CAVD,CAUGgB,OAAOW,QAVV;AAWD,CAZD,IAYO;AACLC,WAAW,UAAM;AACf,sBAASC,MAAT,CAAgB,OAAK9B,KAAL,CAAWE,QAA3B,CAAqC;AACnC6B,QAAS,CAD0B;AAEnCH,SAAU,GAFyB,CAArC;AAGGI,KAHH;AAIAH,WAAW,UAAM;AACf,OAAKX,QAAL,CAAc;AACZjB,aAAc,KADF,CAAd;;AAGD,CAJD,CAIG,GAJH;AAKD,CAVD,CAUG,IAVH;AAWD;AACD,sBAAS6B,MAAT,CAAgB,KAAK9B,KAAL,CAAWE,QAA3B,CAAqC;AACnC6B,QAAS,CAD0B;AAEnCH,SAAU,GAFyB,CAArC;AAGGI,KAHH;AAID,C;AACY;AACHL,OADG,CACS,KAAK3B,KADd,CACH2B,OADG;;AAGX,GAAIA,SAAW,MAAOA,QAAP,GAAmB,UAAlC,CAA8C;AAC5CA;AACD;AACD,sBAASG,MAAT,CAAgB,KAAK9B,KAAL,CAAWE,QAA3B,CAAqC;AACnC6B,QAAS,CAD0B;AAEnCH,SAAU,GAFyB,CAArC;AAGGI,KAHH;AAIAH,WAAW,UAAM;AACf,OAAKX,QAAL,CAAc;AACZjB,aAAc,KADF,CAAd;;AAGD,CAJD,CAIG,GAJH;AAKD,C;AACQ;AACP,GAAI,KAAKD,KAAL,CAAWC,YAAf,CAA6B;AAC3B;AACE,oDAAU,IAAV,EAAe,MAAO,KAAKgC,aAAL,EAAtB;AACE;AACE,MAAO,KAAKjC,KAAL,CAAWuB,KADpB;AAEE,OAAQ,KAAKvB,KAAL,CAAWqB,IAAX,EAAmB,QAAnB,CAA8B,IAA9B,CAAqC,KAF/C;AAGE,QAAS,KAAKrB,KAAL,CAAWqB,IAAX,EAAmB,SAAnB,CAA+B,IAA/B,CAAsC,KAHjD;AAIE,QAAS,KAAKrB,KAAL,CAAWqB,IAAX,EAAmB,SAAnB,CAA+B,IAA/B,CAAsC,KAJjD;;AAME,0CAAM,MAAO,KAAKrB,KAAL,CAAW0B,SAAxB,kDAAoC,KAAK1B,KAAL,CAAWmB,IAA/C,CANF;AAOG,KAAKnB,KAAL,CAAWc,UAAX;AACC;AACE,MAAO,KAAKd,KAAL,CAAWyB,WADpB;AAEE,QAAS,yBAAM,QAAKS,UAAL,EAAN,EAFX;;AAIE,0CAAM,MAAO,KAAKlC,KAAL,CAAWwB,eAAxB;AACG,KAAKxB,KAAL,CAAWc,UADd,CAJF,CARJ,CADF,CADF;;;;;;;AAsBD,CAvBD,IAuBO,OAAO,KAAP;AACR,C,0CAlH0B,IAAVG,OAAU,oCACzB,KAAKkB,aAAL,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmC,CAAEpB,aAAF,CAAnC,EACD,C;;;AAmHHnB,eAAewC,SAAf;;AAEEf,MAAO,oBAAUgB,SAAV,CAAoB;AACzB,oBAAUC,MADe;AAEzB,oBAAUC,MAFe;AAGzB,oBAAUC,KAHe,CAApB,CAFT;;;;AASA,GAAMC,sBAAuB;AAC3B,2BAD2B;AAE3B,EAF2B;;AAI3B7C,cAJ2B,CAA7B,C;;AAMiCA,c,CAAxB6C,oB","file":"ToastContainer.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { View, Modal, Platform, Animated, ViewPropTypes } from \"react-native\";\r\nimport { connectStyle } from \"native-base-shoutem-theme\";\r\nimport { Text } from \"./Text\";\r\nimport { Button } from \"./Button\";\r\nimport { ViewNB } from \"./View\";\r\nimport { Toast } from \"./Toast\";\r\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\r\n\r\nclass ToastContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalVisible: false,\r\n      fadeAnim: new Animated.Value(0)\r\n    };\r\n  }\r\n  static toastInstance;\r\n  static show({ ...config }) {\r\n    this.toastInstance._root.showToast({ config });\r\n  }\r\n  getToastStyle() {\r\n    return {\r\n      position: \"absolute\",\r\n      opacity: this.state.fadeAnim,\r\n      width: \"100%\",\r\n      elevation: 9,\r\n      paddingHorizontal: Platform.OS === \"ios\" ? 20 : 0,\r\n      top: this.state.position === \"top\" ? this.getTop() : undefined,\r\n      bottom: this.state.position === \"bottom\" ? this.getTop() : undefined\r\n    };\r\n  }\r\n  getTop() {\r\n    if (Platform.OS === \"ios\") {\r\n      return 30;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  getButtonText(buttonText) {\r\n    if (buttonText) {\r\n      if (buttonText.trim().length === 0) {\r\n        return undefined;\r\n      } else return buttonText;\r\n    }\r\n    return undefined;\r\n  }\r\n  showToast({ config }) {\r\n    this.setState({\r\n      modalVisible: true,\r\n      text: config.text,\r\n      buttonText: this.getButtonText(config.buttonText),\r\n      type: config.type,\r\n      position: config.position ? config.position : \"bottom\",\r\n      supportedOrientations: config.supportedOrientations,\r\n      style: config.style,\r\n      buttonTextStyle: config.buttonTextStyle,\r\n      buttonStyle: config.buttonStyle,\r\n      textStyle: config.textStyle,\r\n      onClose: config.onClose\r\n    });\r\n    if (config.duration > 0) {\r\n      setTimeout(() => {\r\n        Animated.timing(this.state.fadeAnim, {\r\n          toValue: 0,\r\n          duration: 200\r\n        }).start();\r\n        setTimeout(() => {\r\n          this.setState({\r\n            modalVisible: false\r\n          });\r\n        }, 500);\r\n      }, config.duration);\r\n    } else {\r\n      setTimeout(() => {\r\n        Animated.timing(this.state.fadeAnim, {\r\n          toValue: 0,\r\n          duration: 200\r\n        }).start();\r\n        setTimeout(() => {\r\n          this.setState({\r\n            modalVisible: false\r\n          });\r\n        }, 500);\r\n      }, 1500);\r\n    }\r\n    Animated.timing(this.state.fadeAnim, {\r\n      toValue: 1,\r\n      duration: 200\r\n    }).start();\r\n  }\r\n  closeToast() {\r\n    const { onClose } = this.state;\r\n\r\n    if (onClose && typeof onClose === \"function\") {\r\n      onClose();\r\n    }\r\n    Animated.timing(this.state.fadeAnim, {\r\n      toValue: 0,\r\n      duration: 200\r\n    }).start();\r\n    setTimeout(() => {\r\n      this.setState({\r\n        modalVisible: false\r\n      });\r\n    }, 500);\r\n  }\r\n  render() {\r\n    if (this.state.modalVisible) {\r\n      return (\r\n        <Animated.View style={this.getToastStyle()}>\r\n          <Toast\r\n            style={this.state.style}\r\n            danger={this.state.type == \"danger\" ? true : false}\r\n            success={this.state.type == \"success\" ? true : false}\r\n            warning={this.state.type == \"warning\" ? true : false}\r\n          >\r\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\r\n            {this.state.buttonText && (\r\n              <Button\r\n                style={this.state.buttonStyle}\r\n                onPress={() => this.closeToast()}\r\n              >\r\n                <Text style={this.state.buttonTextStyle}>\r\n                  {this.state.buttonText}\r\n                </Text>\r\n              </Button>\r\n            )}\r\n          </Toast>\r\n        </Animated.View>\r\n      );\r\n    } else return null;\r\n  }\r\n}\r\n\r\nToastContainer.propTypes = {\r\n  ...ViewPropTypes,\r\n  style: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n    PropTypes.array\r\n  ])\r\n};\r\n\r\nconst StyledToastContainer = connectStyle(\r\n  \"NativeBase.ToastContainer\",\r\n  {},\r\n  mapPropsToStyleNames\r\n)(ToastContainer);\r\n\r\nexport { StyledToastContainer as ToastContainer };\r\n"]}