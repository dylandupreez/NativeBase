{"version":3,"sources":["../../../src/basic/ListItem.js"],"names":["ListItem","variables","context","theme","OS","androidRipple","props","onPress","onLongPress","Version","onPressIn","onPressOut","_root","c","listBtnUnderlayColor","children","androidRippleColor","Ripple","androidRippleColorDark","marginLeft","paddingLeft","contextTypes","object","propTypes","style","oneOfType","number","array","itemDivider","bool","button","StyledListItem"],"mappings":"21BAAA,4B;AACA,qC;AACA;;AAEA;AACA,mE;AACA,qD;;AAEMA,Q;;;;AAII;AACR,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CAAqB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SAAtE,mBAAlB;;AAEA;AACC,sBAASG,EAAT,GAAgB,KAAhB;AACAH,UAAUI,aAAV,GAA4B,KAD5B;AAEC,CAAC,KAAKC,KAAL,CAAWC,OAAZ,EAAuB,CAAC,KAAKD,KAAL,CAAWE,WAFpC;AAGA,sBAASC,OAAT,EAAoB,EAJrB;AAKE;AACD;AACC;AACC,QAAS,KAAKH,KAAL,CAAWC,OADrB;AAEC,UAAW,KAAKD,KAAL,CAAWI,SAFvB;AAGC,WAAY,KAAKJ,KAAL,CAAWK,UAHxB;AAIC,YAAa,KAAKL,KAAL,CAAWE,WAJzB;AAKC,aAAc,CALf;AAMC,IAAK,sBAAM,QAAKI,KAAL,CAAaC,CAAnB,EANN;AAOC,cAAeZ,UAAUa,oBAP1B;;AASC,4DAAU,KAAKR,KAAf;AACE,KAAKA,KAAL,CAAWS,QADb,CATD,CADD;;;;AAeA,CArBD,IAqBO;AACN;AACC;AACC,IAAK,sBAAM,QAAKH,KAAL,CAAaC,CAAnB,EADN;AAEC,QAAS,KAAKP,KAAL,CAAWC,OAFrB;AAGC,YAAa,KAAKD,KAAL,CAAWE,WAHzB;AAIC;AACC,KAAKF,KAAL,CAAWU,kBAAX;AACG,qCAAwBC,MAAxB,CAA+B,KAAKX,KAAL,CAAWU,kBAA1C,CADH;AAEG,qCAAwBC,MAAxB,CAA+BhB,UAAUiB,sBAAzC,CAPL;;;AAUC,iDAAM,MAAO,CAAEC,WAAY,CAAC,EAAf,CAAmBC,YAAa,EAAhC,CAAb;AACC,4DAAU,KAAKd,KAAf;AACE,KAAKA,KAAL,CAAWS,QADb,CADD,CAVD,CADD;;;;;AAkBA;AACD,C,wCAhDIf,Q,CACEqB,Y,CAAe,CACrBlB,MAAO,oBAAUmB,MADI,C;;;AAkDvBtB,SAASuB,SAAT;AACI,gCAAmBA,SADvB;AAECC,MAAO,oBAAUC,SAAV,CAAoB,CAAC,oBAAUH,MAAX,CAAmB,oBAAUI,MAA7B,CAAqC,oBAAUC,KAA/C,CAApB,CAFR;AAGCC,YAAa,oBAAUC,IAHxB;AAICC,OAAQ,oBAAUD,IAJnB;;;AAOA,GAAME,gBAAiB,yCAAa,qBAAb,CAAoC,EAApC,iCAA8D/B,QAA9D,CAAvB,C;;AAE2BA,Q,CAAlB+B,c","file":"ListItem.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TouchableHighlight, Platform, TouchableNativeFeedback, View } from \"react-native\";\n\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../Utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\n\nclass ListItem extends Component {\n\tstatic contextTypes = {\n\t\ttheme: PropTypes.object,\n\t};\n\trender() {\n\t\tconst variables = this.context.theme ? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables : variable;\n\n\t\tif (\n\t\t\tPlatform.OS === \"ios\" ||\n\t\t\tvariables.androidRipple === false ||\n\t\t\t(!this.props.onPress && !this.props.onLongPress) ||\n\t\t\tPlatform.Version <= 21\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<TouchableHighlight\n\t\t\t\t\tonPress={this.props.onPress}\n\t\t\t\t\tonPressIn={this.props.onPressIn}\n\t\t\t\t\tonPressOut={this.props.onPressOut}\n\t\t\t\t\tonLongPress={this.props.onLongPress}\n\t\t\t\t\tdelayPressIn={0}\n\t\t\t\t\tref={c => (this._root = c)}\n\t\t\t\t\tunderlayColor={variables.listBtnUnderlayColor}\n\t\t\t\t>\n\t\t\t\t\t<View {...this.props}>\n\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t</View>\n\t\t\t\t</TouchableHighlight>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<TouchableNativeFeedback\n\t\t\t\t\tref={c => (this._root = c)}\n\t\t\t\t\tonPress={this.props.onPress}\n\t\t\t\t\tonLongPress={this.props.onLongPress}\n\t\t\t\t\tbackground={\n\t\t\t\t\t\tthis.props.androidRippleColor\n\t\t\t\t\t\t\t? TouchableNativeFeedback.Ripple(this.props.androidRippleColor)\n\t\t\t\t\t\t\t: TouchableNativeFeedback.Ripple(variables.androidRippleColorDark)\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t<View style={{ marginLeft: -17, paddingLeft: 17 }}>\n\t\t\t\t\t\t<View {...this.props}>\n\t\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t\t</View>\n\t\t\t\t\t</View>\n\t\t\t\t</TouchableNativeFeedback>\n\t\t\t);\n\t\t}\n\t}\n}\n\nListItem.propTypes = {\n\t...TouchableHighlight.propTypes,\n\tstyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n\titemDivider: PropTypes.bool,\n\tbutton: PropTypes.bool,\n};\n\nconst StyledListItem = connectStyle(\"NativeBase.ListItem\", {}, mapPropsToStyleNames)(ListItem);\n\nexport { StyledListItem as ListItem };\n"]}