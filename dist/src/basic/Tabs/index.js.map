{"version":3,"sources":["../../../../src/basic/Tabs/index.js"],"names":["ScrollableTabView","props","initialRender","OS","state","currentPage","initialPage","scrollValue","Value","containerWidth","get","width","sceneKeys","newSceneKeys","console","log","scrollFn","scrollView","x","scrollTo","animated","forceUpdate","runAfterInteractions","goToPage","setTimeout","nextProps","page","children","updateSceneKeys","pageNumber","offset","y","scrollWithoutAnimation","callback","_onChangeTab","bind","newKeys","previousKeys","setState","_children","forEach","child","idx","key","_makeSceneKey","_keyExists","_shouldRenderSceneKey","push","currentPageKey","numOfSibling","prerenderingSiblingsNumber","find","sceneKey","heading","map","e","nativeEvent","contentOffset","offsetX","_updateScrollValue","value","setValue","onScroll","Math","round","_updateSelectedPage","nextPage","localNextPage","position","prevPage","onChangeTab","i","ref","from","layout","requestAnimationFrame","Children","renderTabBar","cloneElement","scenes","_composeScenes","_onScroll","_onMomentumScrollBeginAndEnd","locked","contentProps","overlayTabs","tabBarPosition","tabBarProps","tabs","tabStyle","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","undefined","activeTab","tabBarBackgroundColor","backgroundColor","tabBarActiveTextColor","activeTextColor","tabBarInactiveTextColor","inactiveTextColor","tabBarTextStyle","tabBarUnderlineStyle","underlineStyle","tabContainerStyle","style","left","right","styles","container","_handleLayout","renderScrollableContent","propTypes","oneOf","number","func","any","object","bool","defaultProps","onClass","create","flex","scrollableContentAndroid"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Dimensions, View, Animated, ScrollView, StyleSheet, Platform } from \"react-native\";\nimport TimerMixin from \"react-timer-mixin\";\nimport ReactMixin from \"react-mixin\";\nimport PropTypes from \"prop-types\";\nimport { InteractionManager, ViewPropTypes } from \"../../Utils\";\nimport _ from \"lodash\";\n\nimport SceneComponent from \"./SceneComponent\";\nimport { DefaultTabBar } from \"./DefaultTabBar\";\nimport { ScrollableTabBar } from \"./ScrollableTabBar\";\n\nclass ScrollableTabView extends Component {\n    static propTypes = {\n        tabBarPosition: PropTypes.oneOf([\"top\", \"bottom\", \"overlayTop\", \"overlayBottom\"]),\n        initialPage: PropTypes.number,\n        page: PropTypes.number,\n        onChangeTab: PropTypes.func,\n        onScroll: PropTypes.func,\n        renderTabBar: PropTypes.any,\n        style: ViewPropTypes.style,\n        contentProps: PropTypes.object,\n        scrollWithoutAnimation: PropTypes.bool,\n        locked: PropTypes.bool,\n        prerenderingSiblingsNumber: PropTypes.number,\n    };\n\n    static defaultProps = {\n        tabBarPosition: \"top\",\n        initialPage: 0,\n        page: -1,\n        onChangeTab: () => { },\n        onScroll: () => { },\n        contentProps: {},\n        scrollWithoutAnimation: false,\n        locked: false,\n        prerenderingSiblingsNumber: 0,\n    };\n\n    initialRender = Platform.OS === \"ios\";\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: this.props.initialPage,\n            scrollValue: new Animated.Value(this.props.initialPage),\n            containerWidth: Dimensions.get(\"window\").width,\n            sceneKeys: this.newSceneKeys({ currentPage: this.props.initialPage }),\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"cdm\");\n        if (Platform.OS === \"ios\") {\n            const scrollFn = () => {\n                if (this.scrollView) {\n                    const x = this.props.initialPage * this.state.containerWidth;\n                    console.log(x);\n                    this.scrollView.scrollTo({ x, animated: true });\n                    this.scrollView.forceUpdate();\n\n                }\n            };\n            InteractionManager.runAfterInteractions(scrollFn);\n        }else{\n            this.goToPage(0);\n            this.setTimeout(() => this.goToPage(this.props.initialPage),0);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"cwrp\", nextProps.page, nextProps.initialPage);\n        if (this.initialRender) {\n            this.initialRender = false;\n        }\n        if (nextProps.children !== this.props.children) {\n            this.updateSceneKeys({\n                page: this.state.currentPage,\n                children: nextProps.children,\n            });\n        }\n        if (nextProps.page >= 0 && nextProps.page !== this.state.currentPage) {\n            this.goToPage(nextProps.page);\n        }\n    }\n\n    goToPage(pageNumber) {\n        const offset = pageNumber * this.state.containerWidth;\n\n        if (this.scrollView) {\n            this.scrollView.scrollTo({\n                x: offset,\n                y: 0,\n                animated: !this.props.scrollWithoutAnimation,\n            });\n        }\n\n        const { currentPage } = this.state;\n        this.updateSceneKeys({\n            page: pageNumber,\n            callback: this._onChangeTab.bind(this, currentPage, pageNumber),\n        });\n\n\n    }\n\n    updateSceneKeys({ page, children = this.props.children, callback = () => { } }) {\n        let newKeys = this.newSceneKeys({\n            previousKeys: this.state.sceneKeys,\n            currentPage: page,\n            children,\n        });\n        this.setState({ currentPage: page, sceneKeys: newKeys }, callback);\n    }\n\n    newSceneKeys({ previousKeys = [], currentPage = 0, children = this.props.children }) {\n        let newKeys = [];\n        this._children(children).forEach((child, idx) => {\n            let key = this._makeSceneKey(child, idx);\n            if (this._keyExists(previousKeys, key) || this._shouldRenderSceneKey(idx, currentPage)) {\n                newKeys.push(key);\n            }\n        });\n        return newKeys;\n    }\n\n    _shouldRenderSceneKey(idx, currentPageKey) {\n        let numOfSibling = this.props.prerenderingSiblingsNumber;\n        return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;\n    }\n\n    _keyExists(sceneKeys, key) {\n        return sceneKeys.find(sceneKey => key === sceneKey);\n    }\n\n    _makeSceneKey(child, idx) {\n        return child.props.heading + \"_\" + idx;\n    }\n\n    _composeScenes() {\n        return this._children().map((child, idx) => {\n            let key = this._makeSceneKey(child, idx);\n            return (\n                <SceneComponent\n                    key={child.key}\n                    shouldUpdated={this._shouldRenderSceneKey(idx, this.state.currentPage)}\n                    style={{ width: this.state.containerWidth }}\n                >\n                    {this._keyExists(this.state.sceneKeys, key) ? (\n                        child\n                    ) : (\n                            <View heading={child.props.heading} />\n                        )}\n                </SceneComponent>\n            );\n        });\n    }\n    _onScroll(e) {\n\n        console.log(\"_onScroll\", e.nativeEvent.contentOffset.x);\n\n        if (!this.initialRender) {\n            const offsetX = e.nativeEvent.contentOffset.x;\n            this._updateScrollValue(offsetX / this.state.containerWidth);\n        }\n    }\n\n    _updateScrollValue(value) {\n        this.state.scrollValue.setValue(value);\n        if (this.props.onScroll) {\n            this.props.onScroll(value);\n        }\n    }\n\n    _onMomentumScrollBeginAndEnd(e) {\n        console.log(\"_onMomentumScrollBeginAndEnd\");\n        const offsetX = e.nativeEvent.contentOffset.x;\n        const page = Math.round(offsetX / this.state.containerWidth);\n        if (this.state.currentPage !== page) {\n            this._updateSelectedPage(page);\n        }\n        if (this.initialRender) {\n            this.initialRender = false;\n        }\n    }\n\n    _updateSelectedPage(nextPage) {\n        let localNextPage = nextPage;\n        if (typeof localNextPage === \"object\") {\n            localNextPage = nextPage.nativeEvent.position;\n        }\n        const { currentPage } = this.state;\n\n        this.updateSceneKeys({\n            page: localNextPage,\n            callback: this._onChangeTab.bind(this, currentPage, localNextPage),\n        });\n    }\n\n    _onChangeTab(prevPage, currentPage) {\n        this.props.onChangeTab({\n            i: currentPage,\n            ref: this._children()[currentPage],\n            from: prevPage,\n        });\n    }\n\n    _handleLayout(e) {\n        const { width } = e.nativeEvent.layout;\n        if (Math.round(width) !== Math.round(this.state.containerWidth)) {\n            this.setState({ containerWidth: width }, () => {\n                this.requestAnimationFrame(() => {\n                    this.goToPage(this.state.currentPage);\n                });\n            });\n\n        }\n    }\n\n    _children(children = this.props.children) {\n        return React.Children.map(children, child => child);\n    }\n\n    renderTabBar(props) {\n        if (this.props.renderTabBar === false) {\n            return null;\n        } else if (this.props.renderTabBar) {\n            return React.cloneElement(this.props.renderTabBar(props), props);\n        } else {\n            return <DefaultTabBar {...props} />;\n        }\n    }\n\n    renderScrollableContent() {\n        const scenes = this._composeScenes();\n        return (\n            <ScrollView\n                horizontal\n                pagingEnabled\n                automaticallyAdjustContentInsets={false}\n                // contentOffset={{\n                //     x: this.props.initialPage * this.state.containerWidth\n                // }}\n                ref={scrollView => {\n                    this.scrollView = scrollView;\n                }}\n                onScroll={e => this._onScroll(e)}\n                onMomentumScrollBegin={(e) => this._onMomentumScrollBeginAndEnd(e)}\n                onMomentumScrollEnd={(e) => this._onMomentumScrollBeginAndEnd(e)}\n                scrollEventThrottle={16}\n                scrollsToTop={false}\n                showsHorizontalScrollIndicator={false}\n                scrollEnabled={!this.props.locked}\n                directionalLockEnabled\n                alwaysBounceVertical={false}\n                keyboardDismissMode=\"on-drag\"\n                {...this.props.contentProps}\n            >\n                {scenes}\n            </ScrollView>\n        );\n    }\n\n    render() {\n        let overlayTabs =\n            this.props.tabBarPosition === \"overlayTop\" || this.props.tabBarPosition === \"overlayBottom\";\n\n        let tabBarProps = {\n            goToPage: (pageNumber) => this.goToPage(pageNumber),\n            tabs: this._children().map(child => child.props.heading),\n            tabStyle: this._children().map(child => child.props.tabStyle),\n            activeTabStyle: this._children().map(child => child.props.activeTabStyle),\n            textStyle: this._children().map(child => child.props.textStyle),\n            activeTextStyle: this._children().map(child => child.props.activeTextStyle),\n            tabHeaderStyle: this._children().map(child =>\n                _.get(child.props.heading.props, \"style\", undefined)\n            ),\n            activeTab: this.state.currentPage,\n            scrollValue: this.state.scrollValue,\n            containerWidth: this.state.containerWidth,\n        };\n\n        if (this.props.tabBarBackgroundColor) {\n            tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n        }\n        if (this.props.tabBarActiveTextColor) {\n            tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n        }\n        if (this.props.tabBarInactiveTextColor) {\n            tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n        }\n        if (this.props.tabBarTextStyle) {\n            tabBarProps.textStyle = this.props.tabBarTextStyle;\n        }\n        if (this.props.tabBarUnderlineStyle) {\n            tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n        }\n        if (this.props.tabContainerStyle) {\n            tabBarProps.tabContainerStyle = this.props.tabContainerStyle;\n        }\n        if (overlayTabs) {\n            tabBarProps.style = {\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                [this.props.tabBarPosition === \"overlayTop\" ? \"top\" : \"bottom\"]: 0,\n            };\n        }\n\n        return (\n            <View style={[styles.container, this.props.style]} onLayout={(e) => this._handleLayout(e)}>\n                {this.props.tabBarPosition === \"top\" && this.renderTabBar(tabBarProps)}\n                {this.renderScrollableContent()}\n                {(this.props.tabBarPosition === \"bottom\" || overlayTabs) && this.renderTabBar(tabBarProps)}\n            </View>\n        );\n    }\n}\n\nexport default ReactMixin.onClass(ScrollableTabView, TimerMixin);\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    scrollableContentAndroid: {\n        flex: 1,\n    },\n});"]}