{"version":3,"sources":["../../../../src/basic/Tabs/index.js"],"names":["ScrollableTabView","props","state","currentPage","initialPage","scrollValue","Value","containerWidth","get","width","sceneKeys","newSceneKeys","initialRender","runAfterInteractions","goToPage","nextProps","children","updateSceneKeys","page","callback","setState","pageNumber","offset","scrollView","scrollTo","x","y","animated","scrollWithoutAnimation","newKeys","previousKeys","_children","forEach","child","idx","key","_makeSceneKey","_keyExists","_shouldRenderSceneKey","push","currentPageKey","numOfSibling","prerenderingSiblingsNumber","find","sceneKey","heading","map","e","offsetX","nativeEvent","contentOffset","_updateScrollValue","value","setValue","onScroll","Math","round","length","_updateSelectedPage","nextPage","localNextPage","position","_onChangeTab","bind","prevPage","onChangeTab","i","ref","from","layout","requestAnimationFrame","Children","renderTabBar","cloneElement","scenes","_composeScenes","_onScroll","_onMomentumScrollEnd","locked","contentProps","overlayTabs","tabBarPosition","tabBarProps","tabs","tabStyle","activeTabStyle","textStyle","activeTextStyle","tabHeaderStyle","undefined","activeTab","tabBarBackgroundColor","backgroundColor","tabBarActiveTextColor","activeTextColor","tabBarInactiveTextColor","inactiveTextColor","tabBarTextStyle","tabBarUnderlineStyle","underlineStyle","tabContainerStyle","style","left","right","styles","container","_handleLayout","renderScrollableContent","propTypes","oneOf","number","func","any","object","bool","defaultProps","create","flex","scrollableContentAndroid"],"mappings":"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","file":"index.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Dimensions, View, Animated, ScrollView, StyleSheet, Platform } from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport { InteractionManager, ViewPropTypes } from \"../../Utils\"\nimport _ from \"lodash\";\n\nimport SceneComponent from \"./SceneComponent\";\nimport { DefaultTabBar } from \"./DefaultTabBar\";\nimport { ScrollableTabBar } from \"./ScrollableTabBar\";\n\nexport default class ScrollableTabView extends Component {\n    static propTypes = {\n        tabBarPosition: PropTypes.oneOf([\"top\", \"bottom\", \"overlayTop\", \"overlayBottom\"]),\n        initialPage: PropTypes.number,\n        //page: PropTypes.number,\n        onChangeTab: PropTypes.func,\n        onScroll: PropTypes.func,\n        renderTabBar: PropTypes.any,\n        style: ViewPropTypes.style,\n        contentProps: PropTypes.object,\n        scrollWithoutAnimation: PropTypes.bool,\n        locked: PropTypes.bool,\n        prerenderingSiblingsNumber: PropTypes.number,\n    };\n\n    static defaultProps = {\n        tabBarPosition: \"top\",\n        initialPage: 0,\n        //page: -1,\n        onChangeTab: () => { },\n        onScroll: () => { },\n        contentProps: {},\n        scrollWithoutAnimation: false,\n        locked: false,\n        prerenderingSiblingsNumber: 0,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: this.props.initialPage,\n            scrollValue: new Animated.Value(this.props.initialPage),\n            containerWidth: Dimensions.get(\"window\").width,\n            sceneKeys: this.newSceneKeys({ currentPage: this.props.initialPage }),\n            initialRender: true,\n        }\n    }\n\n    componentDidMount() {\n        InteractionManager.runAfterInteractions(() => {\n            this.goToPage(this.props.initialPage);\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps && nextProps.children !== this.props.children) {\n            this.updateSceneKeys({\n                page: nextProps.initialPage,\n                children: nextProps.children,\n                callback: () => {\n                    if (nextProps.initialPage >= 0 && nextProps.initialPage !== this.props.initialPage) {\n                        this.setState({ initialRender: true }, () => this.goToPage(nextProps.initialPage));\n                    }\n                }\n            });\n        }\n    }\n\n    goToPage(pageNumber) {\n        const offset = pageNumber * this.state.containerWidth;\n        \n        if (this.scrollView) {\n            this.scrollView.scrollTo({\n                x: offset,\n                y: 0,\n                animated: !this.props.scrollWithoutAnimation,\n            });\n        }\n\n        // const { currentPage } = this.state;\n        // this.updateSceneKeys({\n        //     page: pageNumber,\n        //     callback: this._onChangeTab.bind(this, currentPage, pageNumber),\n        // });\n\n    }\n\n    updateSceneKeys({ page, children = this.props.children, callback = () => { } }) {\n        let newKeys = this.newSceneKeys({\n            previousKeys: this.state.sceneKeys,\n            currentPage: page,\n            children,\n        });\n        this.setState({ currentPage: page, sceneKeys: newKeys }, callback);\n    }\n\n    newSceneKeys({ previousKeys = [], currentPage = 0, children = this.props.children }) {\n        let newKeys = [];\n        this._children(children).forEach((child, idx) => {\n            let key = this._makeSceneKey(child, idx);\n            if (this._keyExists(previousKeys, key) || this._shouldRenderSceneKey(idx, currentPage)) {\n                newKeys.push(key);\n            }\n        });\n        return newKeys;\n    }\n\n    _shouldRenderSceneKey(idx, currentPageKey) {\n        let numOfSibling = this.props.prerenderingSiblingsNumber;\n        return idx < currentPageKey + numOfSibling + 1 && idx > currentPageKey - numOfSibling - 1;\n    }\n\n    _keyExists(sceneKeys, key) {\n        return sceneKeys.find(sceneKey => key === sceneKey);\n    }\n\n    _makeSceneKey(child, idx) {\n        return child.props.heading + \"_\" + idx;\n    }\n\n    _composeScenes() {\n        return this._children().map((child, idx) => {\n            let key = this._makeSceneKey(child, idx);\n            return (\n                <SceneComponent\n                    key={child.key}\n                    shouldUpdated={this._shouldRenderSceneKey(idx, this.state.currentPage)}\n                    style={{ width: this.state.containerWidth }}\n                >\n                    {this._keyExists(this.state.sceneKeys, key) ? (\n                        child\n                    ) : (\n                            <View heading={child.props.heading} />\n                        )}\n                </SceneComponent>\n            );\n        });\n    }\n    _onScroll(e) {\n        const offsetX = e.nativeEvent.contentOffset.x;\n        if (this.state.initialRender) {\n            this.setState({ initialRender: false }, () => {\n                this._updateScrollValue(this.state.currentPage);\n            });\n        } else {\n            this._updateScrollValue(offsetX / this.state.containerWidth);\n        }\n\n\n    }\n\n    _updateScrollValue(value) {\n        this.state.scrollValue.setValue(value);\n        if (this.props.onScroll) {\n            this.props.onScroll(value);\n        }\n\n    }\n\n    _onMomentumScrollEnd(e) {\n        let offsetX = e.nativeEvent.contentOffset.x;\n        if (offsetX < 0) {\n            offsetX = offsetX * -1;\n        }\n        let page = Math.round(offsetX / this.state.containerWidth);\n        \n        if (page >= this.props.children.length) {\n            page = this.props.children.length - 1;\n        }\n        if (this.state.currentPage !== page) {\n            this._updateSelectedPage(page);\n        }\n    }\n\n    _updateSelectedPage(nextPage) {\n        let localNextPage = nextPage;\n        if (typeof localNextPage === \"object\") {\n            localNextPage = nextPage.nativeEvent.position;\n        }\n\n        const { currentPage } = this.state;\n        \n        this.updateSceneKeys({\n            page: localNextPage,\n            callback: this._onChangeTab.bind(this, currentPage, localNextPage),\n        });\n    }\n\n    _onChangeTab(prevPage, currentPage) {\n        this.props.onChangeTab({\n            i: currentPage,\n            ref: this._children()[currentPage],\n            from: prevPage,\n        });\n    }\n\n    _handleLayout(e) {\n        const { width } = e.nativeEvent.layout;\n        if (Math.round(width) !== Math.round(this.state.containerWidth)) {\n            this.setState({ containerWidth: width }, () => {\n                this.requestAnimationFrame(() => {\n                    this.goToPage(this.state.currentPage);\n                });\n            });\n\n        }\n    }\n\n    _children(children = this.props.children) {\n        return React.Children.map(children, child => child);\n    }\n\n    renderTabBar(props) {\n        if (this.props.renderTabBar === false) {\n            return null;\n        } else if (this.props.renderTabBar) {\n            return React.cloneElement(this.props.renderTabBar(props), props);\n        } else {\n            return <DefaultTabBar {...props} />;\n        }\n    }\n\n    renderScrollableContent() {\n        const scenes = this._composeScenes();\n        return (\n            <ScrollView\n                horizontal\n                pagingEnabled\n                automaticallyAdjustContentInsets={false}\n                contentOffset={{\n                    x: this.props.initialPage * this.state.containerWidth,\n                }}\n                ref={scrollView => {\n                    this.scrollView = scrollView;\n                }}\n                onScroll={e => this._onScroll(e)}\n\n                onMomentumScrollEnd={(e) => this._onMomentumScrollEnd(e)}\n                scrollEventThrottle={16}\n                scrollsToTop={false}\n                showsHorizontalScrollIndicator={false}\n                scrollEnabled={!this.props.locked}\n                directionalLockEnabled\n                alwaysBounceVertical={false}\n                keyboardDismissMode=\"on-drag\"\n                {...this.props.contentProps}\n            >\n                {scenes}\n            </ScrollView>\n        );\n    }\n\n    render() {\n        let overlayTabs =\n            this.props.tabBarPosition === \"overlayTop\" || this.props.tabBarPosition === \"overlayBottom\";\n            \n        let tabBarProps = {\n            goToPage: (pageNumber) => this.goToPage(pageNumber),\n            tabs: this._children().map(child => child.props.heading),\n            tabStyle: this._children().map(child => child.props.tabStyle),\n            activeTabStyle: this._children().map(child => child.props.activeTabStyle),\n            textStyle: this._children().map(child => child.props.textStyle),\n            activeTextStyle: this._children().map(child => child.props.activeTextStyle),\n            tabHeaderStyle: this._children().map(child =>\n                _.get(child.props.heading.props, \"style\", undefined)\n            ),\n            activeTab: this.state.currentPage,\n            scrollValue: this.state.scrollValue,\n            containerWidth: this.state.containerWidth,\n        };\n\n        if (this.props.tabBarBackgroundColor) {\n            tabBarProps.backgroundColor = this.props.tabBarBackgroundColor;\n        }\n        if (this.props.tabBarActiveTextColor) {\n            tabBarProps.activeTextColor = this.props.tabBarActiveTextColor;\n        }\n        if (this.props.tabBarInactiveTextColor) {\n            tabBarProps.inactiveTextColor = this.props.tabBarInactiveTextColor;\n        }\n        if (this.props.tabBarTextStyle) {\n            tabBarProps.textStyle = this.props.tabBarTextStyle;\n        }\n        if (this.props.tabBarUnderlineStyle) {\n            tabBarProps.underlineStyle = this.props.tabBarUnderlineStyle;\n        }\n        if (this.props.tabContainerStyle) {\n            tabBarProps.tabContainerStyle = this.props.tabContainerStyle;\n        }\n        if (overlayTabs) {\n            tabBarProps.style = {\n                position: \"absolute\",\n                left: 0,\n                right: 0,\n                [this.props.tabBarPosition === \"overlayTop\" ? \"top\" : \"bottom\"]: 0,\n            };\n        }\n\n        return (\n            <View style={[styles.container, this.props.style]} onLayout={(e) => this._handleLayout(e)}>\n                {this.props.tabBarPosition === \"top\" && this.renderTabBar(tabBarProps)}\n                {this.renderScrollableContent()}\n                {(this.props.tabBarPosition === \"bottom\" || overlayTabs) && this.renderTabBar(tabBarProps)}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    scrollableContentAndroid: {\n        flex: 1,\n    },\n});"]}